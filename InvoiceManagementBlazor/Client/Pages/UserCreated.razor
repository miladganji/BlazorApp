@page "/person/Create"
@inject HttpClient Http
@inject NavigationManager navigation 
@inject InvoiceManagementBlazor.Client.Services.IhttpService httpservice
<EditForm Model="user" OnValidSubmit="SendData">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>FullName</label>
        <div>
            <InputText @bind-Value="user.FullName" class="form-control" placeholder="FullName"></InputText>
            <ValidationMessage For="@(()=>user.FullName)" />
        </div>
    </div>

    <div class="form-group">
        <label>UserName</label>
        <div>
            <InputText @bind-Value="user.UserName" class="form-control" placeholder="UserName"></InputText>
            <ValidationMessage For="@(()=>user.UserName)" />
        </div>
    </div>


    <div class="form-group">
        <label>Password</label>
        <div>
            <InputText @bind-Value="user.Password" class="form-control" placeholder="password"></InputText>
            <ValidationMessage For="@(()=>user.Password)" />
        </div>
    </div>

    <button class="btn btn-success">Submit</button>
</EditForm>

@code {
    [Parameter]
    public string FullName { get; set; }

    [Parameter]
    public string password { get; set; }

    [Parameter]
    public string UserName { get; set; }
    InvoiceManagementBlazor.Shared.Entities.User user = new InvoiceManagementBlazor.Shared.Entities.User();

    public async Task SendData()
    {
        Console.WriteLine(user.FullName);
        Console.WriteLine(user.UserName);
        Console.WriteLine(user.Password);
        Console.WriteLine(navigation.BaseUri);




        try
        {

            var res=await  httpservice.Post(navigation.BaseUri + "api/Home/CreatePerson", user);
        }
        catch (Exception ex)
        {

            throw new ArgumentException(ex.Message);
        }


        navigation.NavigateTo("/");

        await Task.CompletedTask;
    }
}
